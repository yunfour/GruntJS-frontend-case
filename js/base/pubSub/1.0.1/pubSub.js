/*! gruntTest 2014-08-05 */
define("base/pubSub/1.0.1/pubSub-debug",["base/createClass/1.0.2/createClass-debug"],function(a){var b=a("base/createClass/1.0.2/createClass-debug"),c=b({methods:{bind:function(a,b){var c=this,d=c.getAttr("events");if("string"!=typeof a)throw new Error("方法 bind(eventName, callback) 的参数eventName 必须为字符串");return"object"!=typeof d&&(d={}),d[a]instanceof Array||(d[a]=[]),"function"==typeof b&&d[a].push(b),c.setAttr("events",d),c},unbind:function(a,b){var c=this,d=c.getAttr("events");if(0===arguments.length)d=null,d={},c.setAttr("events",d);else if(1===arguments.length){if("string"!=typeof a)throw new Error("方法 unbind(eventName, callback) 的参数 eventName 必须为字符串");d&&d[a]instanceof Array&&(d[a].length=0)}else{if("string"!=typeof a)throw new Error("方法 unbind(eventName, callback) 的参数 eventName 必须为字符串");if(d&&d[a]instanceof Array)if("function"==typeof b)for(var e=d[a],f=e.length-1;f>=0;f--)e[f]===b&&e.splice(f,1);else d[a].length=0}return c.setAttr("events",d),c},trigger:function(a){var b=this,c=b.getAttr("events"),d=Array.prototype.slice.apply(arguments);if(a=d.shift(),"string"!=typeof a)throw new Error("方法 trigger(eventName) 的参数eventName 必须为字符串");if(c&&c[a]instanceof Array)for(var e=0,f=c[a].length;f>e;e++)if("function"==typeof c[a][e]){var g=c[a][e].apply(b,d);if(g===!1)break}return b},on:function(a,b){var c=this;return 1===arguments.length?c.trigger(a):arguments.length>1&&c.bind(a,b),c}}});return c}),define("base/pubSub/1.0.1/pubSub",["base/createClass/1.0.2/createClass"],function(a){var b=a("base/createClass/1.0.2/createClass"),c=b({methods:{bind:function(a,b){var c=this,d=c.getAttr("events");if("string"!=typeof a)throw new Error("方法 bind(eventName, callback) 的参数eventName 必须为字符串");return"object"!=typeof d&&(d={}),d[a]instanceof Array||(d[a]=[]),"function"==typeof b&&d[a].push(b),c.setAttr("events",d),c},unbind:function(a,b){var c=this,d=c.getAttr("events");if(0===arguments.length)d=null,d={},c.setAttr("events",d);else if(1===arguments.length){if("string"!=typeof a)throw new Error("方法 unbind(eventName, callback) 的参数 eventName 必须为字符串");d&&d[a]instanceof Array&&(d[a].length=0)}else{if("string"!=typeof a)throw new Error("方法 unbind(eventName, callback) 的参数 eventName 必须为字符串");if(d&&d[a]instanceof Array)if("function"==typeof b)for(var e=d[a],f=e.length-1;f>=0;f--)e[f]===b&&e.splice(f,1);else d[a].length=0}return c.setAttr("events",d),c},trigger:function(a){var b=this,c=b.getAttr("events"),d=Array.prototype.slice.apply(arguments);if(a=d.shift(),"string"!=typeof a)throw new Error("方法 trigger(eventName) 的参数eventName 必须为字符串");if(c&&c[a]instanceof Array)for(var e=0,f=c[a].length;f>e;e++)if("function"==typeof c[a][e]){var g=c[a][e].apply(b,d);if(g===!1)break}return b},on:function(a,b){var c=this;return 1===arguments.length?c.trigger(a):arguments.length>1&&c.bind(a,b),c}}});return c});